# -*- coding: utf-8 -*-
"""K-Nearest-Neighbours.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fzBk1EwlHgAfH8eOJoMCY8faOoGJd7AA
"""

import pandas as pd
import numpy as np

dataBuah = {
    'Buah': ['Jeruk', 'Apel', 'Jeruk', 'Apel', 'Jeruk', 'Apel', 'Jeruk', 'Apel', 'Jeruk', 'Apel'],
    'Berat': [150, 180, 160, 200, 155, 175, 165, 190, 145, 185],
    'Diameter': [8, 7, 8.5, 7.5, 8.2, 7.8, 8.1, 7.6, 7.9, 7.4]
}

buah_df = pd.DataFrame(dataBuah)

X = buah_df[['Berat', 'Diameter']]
y = buah_df['Buah']

from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = KNeighborsClassifier(n_neighbors=3)
model.fit(X_train, y_train)

y_pred = model.predict(X_test)

# Evaluasi Model
accuracy = np.mean(y_pred == y_test)
print(f'Akurasi model: {accuracy * 100:.2f}%')

from sklearn.metrics import classification_report
print(classification_report(y_test, y_pred))

X_pred = np.array([165, 7])

from scipy.spatial.distance import euclidean # Liblary untuk menghitung distance terdekat untuk melakukan prediksi
distances = [euclidean(X_pred, d) for d in X_train.to_numpy()]

buah_df = pd.DataFrame({'Distance': distances, 'Buah': y_train.reset_index(drop=True)})
buah_df = buah_df.sort_values(by='Distance')

prediksi_buah = buah_df.iloc[0].Buah #  Mengambil distance terdekat dari hasil prediksi
print("Berat (Gram) :", X_pred[0], "| Diameter (cm) :", X_pred[1], "| Prediksi Buah :", prediksi_buah)

